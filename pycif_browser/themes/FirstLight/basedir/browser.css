/* MAIN LAYOUT */
:root {
	--preview-height: 170px;
	--compo-height: 220px;
}

body {
	display: flex;
	justify-content: center;
}

body * {
	box-sizing: border-box;
}

.center {
	width: 80vw;
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
	gap: 10px;
}

#heading {
	padding: 25px;
}

h1 {
	padding: 0px;
	margin: 0px;
	padding-bottom: 10px;
}

#searchbar {
	display: flex;
}

#searchbar .input {
	flex-grow: 1;
}

#compos {
	width: 100%;
}

/* NEUMORPHISM */

:root {
  --color-panel: #DDE1E7;
  --color-panel-interest: #000;
  --color-fg: #333;
  --color-fg-interest: #EEE;
  --color-fg-acc: #25F;
	--color-shadow-light: rgba(255, 255, 255, 0.8);
	--color-shadow-dark: rgba(90, 90, 90, 0.6);
}

h4, p {
	padding: 0px;
	margin: 0px;
}

.panel {
	background-color: var(--color-panel);
	border-radius: 10px;
	padding: 10px;
	margin: 5px;
}

.textpanel {
	background-color: var(--color-panel);
	border-radius: 10px;
	padding: 10px;
	padding-top: 5px;
	padding-bottom: 5px;
	margin: 5px;
}

.input {
	outline: none;
	border: none;
	margin: 10px;
	padding: 10px;
}

.convex {
	box-shadow: 4px 4px 6px var(--color-shadow-dark), -4px -4px 6px var(--color-shadow-light);
}

.concave {
	box-shadow: inset -4px -4px 6px -1px var(--color-shadow-light), inset 2px 2px 8px -1px var(--color-shadow-dark);
}

body {
	background-color: var(--color-panel);
	font-family: Sans-Serif;
}

.center {
	background-color: var(--color-panel);
}

#compos {
	background-color: var(--color-panel);
}


/*    FLEX LAYOUT     */

#compos {
	display: flex;
	flex-wrap: wrap;
	gap: 12px;
}

.compo-wrap {
	flex-grow: 1;
	width: min-content;
}

.compo {
	display: flex;
	flex-wrap: nowrap;
}

.compo .right {
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
}

.compo .right .tags {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}

.compo .header {
	/*display: flex;
	flex-wrap: nowrap;*/
	width: min-content;
	white-space: nowrap;
}

.compo .header .compo-name {
	color: var(--color-fg-acc);
}

.description {
	overflow-y: hidden;
}

.compo .left {
	display: flex;
	flex-direction: column;
	justify-content: center;
}


/* STATIC SIZES */

.compo {
	height: var(--compo-height);
}

.layer-image {
	height: var(--preview-height);
}

.compo .right {
	/*width: 300px;
	overflow: hidden;*/
}

/* EXPANDING */

.compo {
	z-index: 0;
	transition: left .4s, top .4s, height .4s, width .4s, z-index .5s step-end;
}

.compo.expanded {
	left: 5vw !important;
	top: 10vh !important;
	z-index: 1;

	height: 80vh;
	width: 90vw !important;
	overflow: hidden;
	transition: left .4s, top .4s, height .4s, width .4s, z-index .5s step-start;
}

.compo.expanded .left {
	padding-right: 20vw;
	padding-left: 10vw;
}


/* LAYER STACK */

.compo .left {
	overflow-y: clip;
}

.layerstack {
	display: flex;
	flex-direction: column-reverse;
	flex-wrap: nowrap;
	/*outline: 1px solid blue;*/
}

.layer {
	display: flex;
	flex-direction: column;
	/*outline: 5px solid red;*/
	justify-content: center;
}

.layer-first {
	/* what?? */
	flex-grow: 1;
}

.layer-inner {
	display: flex;
}

.layer-image-wrap {
	height: 0px;
}

.layer-caption {
	height: 0px;
	width: 0px;
	overflow: visible;
	white-space: nowrap;
	transform: translateX(40px);
}

/* LAYER STACK EXPAND */

.layerstack {
	height: 100%;
	transition: height .6s;
}

.compo.expanded .layerstack {
	height: 75%;
}

.layer-image {
	transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateZ(0px);
	transition: transform .6s, color .6s;
}

.compo.expanded .layer-image {
	transform: rotateX(60deg) rotateY(0deg) rotateZ(-45deg) translateZ(100px);
}

.layer-caption {
	height: 0px;
	transition: height 1s;
}

.compo.expanded .layer-caption {
	height: 1em;
}

/* LAYER EXPAND */

.layer-inner * {
	pointer-events: none;
	/* Due to transforms,
	 * layer-image may end up poking outside of the layer.
	 * This make sure that a layer counts as hvered only if
	 * it itself, not one of its children (i.e. oversized image)
	 * is hovered.
	 * This prevents jittering when the cursor is in an awkward spot
	 */
}

.compo .layer {
	flex-grow: 0;
	transition: flex-grow .5s;
}

.compo.expanded .layer {
	flex-grow: 1;
}

.compo.expanded .layer:hover {
	flex-grow: 5;
}

/* LAYERSTACK COLORS */

.compo .left {
	background-color: var(--color-panel);
	transition: background-color 1.2s, box-shadow 1.2s, padding-right .4s, padding-left .4s;
}
/* TODO turns out transition property doesn't "stack" */

.compo.expanded .left {
	background-color: var(--color-panel-interest);
	box-shadow: none;
}

.layer-caption {
	color: var(--color-fg-interest);
}

/* LAYER COLORS */
/* Matplotlib tab10 colorscheme */

.layer:nth-child(10n+2) .layer-image {
	color: #1f77b4;
}

.layer:nth-child(10n+3) .layer-image {
	color: #ff7f0e;
}

.layer:nth-child(10n+4) .layer-image {
	color: #2ca02c;
}

.layer:nth-child(10n+5) .layer-image {
	color: #d62728;
}

.layer:nth-child(10n+6) .layer-image {
	color: #9467bd;
}

.layer:nth-child(10n+7) .layer-image {
	color: #8c564b;
}

.layer:nth-child(10n+8) .layer-image {
	color: #e377c2;
}

.layer:nth-child(10n+9) .layer-image {
	color: #7f7f7f;
}

.layer:nth-child(10n) .layer-image {
	color: #bcbd22;
}

.layer:nth-child(10n+1) .layer-image {
	color: #17becf;
}

.compo.expanded .layer-image {
	color: white;
}

/* SEARCH */

.search-hide-keyword {
	display: none;
}

.search-hide-package {
	display: none;
}

.search-hide-tags {
	display: none;
}

.search-hidden {
	display: none;
}


